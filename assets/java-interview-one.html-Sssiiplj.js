const e=JSON.parse('{"key":"v-27444906","path":"/baguwen/java-interview/java-interview-one.html","title":"Java知识点问题汇总-1","lang":"zh-CN","frontmatter":{"title":"Java知识点问题汇总-1","category":"Java","icon":"et-performance","tag":["Java基础"],"description":"::: tip Java 基础部分，包括语法基础，泛型，注解，异常，反射和其它（如 SPI 机制等）。 ::: 1.1 语法基础 面向对象特性\\r封装; 利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体。数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。用户无需知道对象内部的细节...","head":[["meta",{"property":"og:url","content":"https://afterward.top/baguwen/java-interview/java-interview-one.html"}],["meta",{"property":"og:site_name","content":"AfterWard"}],["meta",{"property":"og:title","content":"Java知识点问题汇总-1"}],["meta",{"property":"og:description","content":"::: tip Java 基础部分，包括语法基础，泛型，注解，异常，反射和其它（如 SPI 机制等）。 ::: 1.1 语法基础 面向对象特性\\r封装; 利用抽象数据类型将数据和基于数据的操作封装在一起，使其构成一个不可分割的独立实体。数据被保护在抽象数据类型的内部，尽可能地隐藏内部的细节，只保留一些对外接口使之与外部发生联系。用户无需知道对象内部的细节..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-01-13T13:12:53.000Z"}],["meta",{"property":"article:author","content":"Mr.Lss"}],["meta",{"property":"article:tag","content":"Java基础"}],["meta",{"property":"article:modified_time","content":"2024-01-13T13:12:53.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Java知识点问题汇总-1\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-13T13:12:53.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Lss\\",\\"url\\":\\"https://afterward.top\\"}]}"]]},"headers":[{"level":2,"title":"1.1 语法基础","slug":"_1-1-语法基础","link":"#_1-1-语法基础","children":[{"level":3,"title":"对 equal()和 hashCode()的理解?","slug":"对-equal-和-hashcode-的理解","link":"#对-equal-和-hashcode-的理解","children":[]},{"level":3,"title":"final、finalize 和 finally 的不同之处?","slug":"final、finalize-和-finally-的不同之处","link":"#final、finalize-和-finally-的不同之处","children":[]},{"level":3,"title":"String、StringBuffer 与 StringBuilder 的区别？","slug":"string、stringbuffer-与-stringbuilder-的区别","link":"#string、stringbuffer-与-stringbuilder-的区别","children":[]},{"level":3,"title":"接口与抽象类的区别？","slug":"接口与抽象类的区别","link":"#接口与抽象类的区别","children":[]},{"level":3,"title":"this() & super()在构造方法中的区别？","slug":"this-super-在构造方法中的区别","link":"#this-super-在构造方法中的区别","children":[]},{"level":3,"title":"Java 移位运算符？","slug":"java-移位运算符","link":"#java-移位运算符","children":[]}]},{"level":2,"title":"1.2 泛型","slug":"_1-2-泛型","link":"#_1-2-泛型","children":[{"level":3,"title":"为什么需要泛型？","slug":"为什么需要泛型","link":"#为什么需要泛型","children":[]},{"level":3,"title":"泛型类如何定义使用？","slug":"泛型类如何定义使用","link":"#泛型类如何定义使用","children":[]},{"level":3,"title":"泛型接口如何定义使用？","slug":"泛型接口如何定义使用","link":"#泛型接口如何定义使用","children":[]},{"level":3,"title":"泛型方法如何定义使用？","slug":"泛型方法如何定义使用","link":"#泛型方法如何定义使用","children":[]}]},{"level":2,"title":"1.3 注解","slug":"_1-3-注解","link":"#_1-3-注解","children":[{"level":3,"title":"注解的作用？","slug":"注解的作用","link":"#注解的作用","children":[]},{"level":3,"title":"注解的常见分类？","slug":"注解的常见分类","link":"#注解的常见分类","children":[]}]},{"level":2,"title":"1.4 异常","slug":"_1-4-异常","link":"#_1-4-异常","children":[]},{"level":2,"title":"1.5 反射","slug":"_1-5-反射","link":"#_1-5-反射","children":[]},{"level":2,"title":"1.6 SPI 机制","slug":"_1-6-spi-机制","link":"#_1-6-spi-机制","children":[]},{"level":2,"title":"2 Java 集合","slug":"_2-java-集合","link":"#_2-java-集合","children":[{"level":3,"title":"2.1 Collection","slug":"_2-1-collection","link":"#_2-1-collection","children":[]},{"level":3,"title":"2.2 Map","slug":"_2-2-map","link":"#_2-2-map","children":[]}]}],"git":{"createdTime":1705151573000,"updatedTime":1705151573000,"contributors":[{"name":"lss","email":"528952805@qq.com","commits":1}]},"readingTime":{"minutes":28.43,"words":8528},"filePathRelative":"baguwen/java-interview/java-interview-one.md","localizedDate":"2024年1月13日","excerpt":"","autoDesc":true}');export{e as data};
