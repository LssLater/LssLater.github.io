import{_ as t}from"./plugin-vue_export-helper-x3n3nnut.js";import{o as d,c as n,e as s}from"./app-9Gb0doIl.js";const a={},e=s(`<h3 id="_1、sql110-插入记录-一" tabindex="-1"><a class="header-anchor" href="#_1、sql110-插入记录-一" aria-hidden="true">#</a> 1、<strong>SQL110 插入记录（一）</strong></h3><p>牛客后台会记录每个用户的试卷作答记录到 exam_record 表，现在有两个用户的作答记录详情如下：</p><ul><li>用户 1001 在 2021 年 9 月 1 日晚上 10 点 11 分 12 秒开始作答试卷 9001，并在 50 分钟后提交，得了 90 分；</li><li>用户 1002 在 2021 年 9 月 4 日上午 7 点 1 分 2 秒开始作答试卷 9002，并在 10 分钟后退出了平台。</li></ul><p>试卷作答记录表 exam_record 中，表已建好，其结构如下，请用一条语句将这两条记录插入表中。</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>该题最后会通过执行 SELECT uid, exam_id, start_time, submit_time, score FROM exam_record;来对比结果</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span>
  exam_record
<span class="token keyword">VALUES</span>
  <span class="token punctuation">(</span>
    <span class="token boolean">NULL</span><span class="token punctuation">,</span>
    <span class="token number">1001</span><span class="token punctuation">,</span>
    <span class="token number">9001</span><span class="token punctuation">,</span>
    <span class="token string">&#39;2021-09-01 22:11:12&#39;</span><span class="token punctuation">,</span>
    <span class="token string">&#39;2021-09-01 23:01:12&#39;</span><span class="token punctuation">,</span>
    <span class="token number">90</span>
  <span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">1002</span><span class="token punctuation">,</span> <span class="token number">9002</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-09-04 07:01:02&#39;</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token boolean">NULL</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、sql111-插入记录-二" tabindex="-1"><a class="header-anchor" href="#_2、sql111-插入记录-二" aria-hidden="true">#</a> 2、<strong>SQL111 插入记录（二）</strong></h3><p>现有一张试卷作答记录表 exam_record，结构如下表，其中包含多年来的用户作答试卷记录，由于数据越来越多，维护难度越来越大，需要对数据表内容做精简，历史数据做备份。</p><p>表 exam_record：</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>我们已经创建了一张新表 exam_record_before_2021 用来备份 2021 年之前的试题作答记录，结构和 exam_record 表一致，请将 2021 年之前的已完成了的试题作答纪录导入到该表。</p><p>后台会通过执行&quot;SELECT * FROM exam_record_before_2021;&quot;语句来对比结果</p><p><strong>明确考点：</strong></p><p>插入记录的方式汇总：</p><ul><li>普通插入（全字段）：INSERT INTO table_name VALUES (value1, value2, ...)</li><li>普通插入（限定字段）：INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...)</li><li>多条一次性插入：INSERT INTO table_name (column1, column2, ...) VALUES (value1_1, value1_2, ...), (value2_1, value2_2, ...), ...</li><li>从另一个表导入：INSERT INTO table_name SELECT * FROM table_name2 [WHERE key=value]</li><li>带更新的插入：REPLACE INTO table_name VALUES (value1, value2, ...) （注意这种原理是检测到主键或唯一性索引键重复就删除原记录后重新插入）</li></ul><p><strong>细节剖析：</strong></p><ul><li>新表 exam_record_before_2021 已创建好；</li><li>第一列为自增主键列，不能直接复制过去；</li><li>只复制 2021 年之前的记录；</li><li>只复制已完成了的试题作答纪录；</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span>
  exam_record_before_2021<span class="token punctuation">(</span>uid<span class="token punctuation">,</span> exam_id<span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">,</span> score<span class="token punctuation">)</span>
<span class="token keyword">SELECT</span>
  uid<span class="token punctuation">,</span>
  exam_id<span class="token punctuation">,</span>
  start_time<span class="token punctuation">,</span>
  submit_time<span class="token punctuation">,</span>
  score
<span class="token keyword">FROM</span>
  exam_record
<span class="token keyword">WHERE</span>
  <span class="token keyword">YEAR</span><span class="token punctuation">(</span>submit_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token string">&#39;2021&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、sql112-插入记录-三" tabindex="-1"><a class="header-anchor" href="#_3、sql112-插入记录-三" aria-hidden="true">#</a> 3、<strong>SQL112 插入记录（三）</strong></h3><p>现在有一套 ID 为 9003 的高难度 SQL 试卷，时长为一个半小时，请你将 2021-01-01 00:00:00 作为发布时间插入到试题信息表 examination_info（其表结构如下图），不管该 ID 试卷是否存在，都要插入成功，请尝试插入它。</p><p>试题信息表 examination_info：</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td>UNI</td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>tag</td><td>varchar(32)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>类别标签</td></tr><tr><td>difficulty</td><td>varchar(8)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>难度</td></tr><tr><td>duration</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>时长(分钟数)</td></tr><tr><td>release_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>发布时间</td></tr></tbody></table><p>后台会通过执行 <code>**SELECT exam_id,tag,difficulty,duration,release_time FROM examination_info**</code> 语句来对比结果。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">REPLACE</span> <span class="token keyword">INTO</span> examination_info
<span class="token keyword">VALUES</span>
  <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">,</span> <span class="token number">9003</span><span class="token punctuation">,</span> <span class="token string">&#39;SQL&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hard&#39;</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token string">&#39;2021-01-01 00:00:00&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_4、sql113-更新记录-一" tabindex="-1"><a class="header-anchor" href="#_4、sql113-更新记录-一" aria-hidden="true">#</a> 4、<strong>SQL113 更新记录（一）</strong></h3><p>现有一张试卷信息表 examination_info，表结构如下图所示：</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td>UNI</td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>tag</td><td>char(32)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>类别标签</td></tr><tr><td>difficulty</td><td>char(8)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>难度</td></tr><tr><td>duration</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>时长</td></tr><tr><td>release_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>发布时间</td></tr></tbody></table><p>请把 examination_info 表中 tag 为 PYTHON 的 tag 字段全部修改为 Python。</p><p>后台会通过执行&#39;SELECT exam_id,tag,difficulty,duration,release_time FROM examination_info;&#39;语句来对比结果。</p><p><strong>修改记录的方式汇总：</strong></p><ul><li>**设置为新值：**UPDATE table_name SET column_name=new_value [, column_name2=new_value2] [WHERE column_name3=value3]</li><li>**根据已有值替换：**UPDATE table_name SET key1=replace(key1, &#39;查找内容&#39;, &#39;替换成内容&#39;) [WHERE column_name3=value3]</li></ul><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> examination_info <span class="token keyword">SET</span> tag <span class="token operator">=</span> <span class="token string">&#39;Python&#39;</span> <span class="token keyword">WHERE</span> tag <span class="token operator">=</span> <span class="token string">&quot;PYTHON&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_5、sql114-更新记录-二" tabindex="-1"><a class="header-anchor" href="#_5、sql114-更新记录-二" aria-hidden="true">#</a> 5、<strong>SQL114 更新记录（二）</strong></h3><p>现有一张试卷作答记录表 exam_record，其中包含多年来的用户作答试卷记录，结构如下表：</p><p>作答记录表 exam_record：</p><p>submit_time 为 完成时间</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>请把 exam_record 表中 2021 年 9 月 1 日之前开始作答的未完成记录全部改为被动完成，即：将完成时间改为&#39;2099-01-01 00:00:00&#39;，分数改为 0。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">UPDATE</span>
  exam_record
<span class="token keyword">SET</span>
  submit_time <span class="token operator">=</span> <span class="token string">&#39;2099-01-01 00:00:00&#39;</span><span class="token punctuation">,</span>
  score <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">WHERE</span>
  start_time <span class="token operator">&lt;</span> <span class="token string">&#39;2021-09-01&#39;</span>
  <span class="token operator">AND</span> submit_time <span class="token operator">IS</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_6、sql115-删除记录-一" tabindex="-1"><a class="header-anchor" href="#_6、sql115-删除记录-一" aria-hidden="true">#</a> 6、<strong>SQL115 删除记录（一）</strong></h3><p>现有一张试卷作答记录表 exam_record，其中包含多年来的用户作答试卷记录，结构如下表：</p><p>作答记录表 exam_record：</p><p>start_time 是试卷开始时间</p><p>submit_time 是交卷，即结束时间</p><table><thead><tr><th>Filed</th><th>Type</th><th>Null</th><th>Key</th><th>Extra</th><th>Default</th><th>Comment</th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>请删除 exam_record 表中作答时间小于 5 分钟整且分数不及格（及格线为 60 分）的记录；</p><p>后台会执行您的 SQL，然后通过 SELECT * FROM exam_record; 语句来筛选出剩下的数据，与正确数据进行对比。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span>
  exam_record
<span class="token keyword">WHERE</span>
  timestampdiff<span class="token punctuation">(</span><span class="token keyword">MINUTE</span><span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span>
  <span class="token operator">AND</span> score <span class="token operator">&lt;</span> <span class="token number">60</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7、sql116-删除记录-二" tabindex="-1"><a class="header-anchor" href="#_7、sql116-删除记录-二" aria-hidden="true">#</a> 7、<strong>SQL116 删除记录（二）</strong></h3><p>现有一张试卷作答记录表 exam_record，其中包含多年来的用户作答试卷记录，结构如下表：</p><p><strong>作答记录表 exam_record：</strong></p><p>start_time 是试卷开始时间</p><p>submit_time 是交卷时间，即结束时间，如果未完成的话，则为空</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>请删除 exam_record 表中未完成作答或作答时间小于 5 分钟整的记录中，开始作答时间最早的 3 条记录。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span>
  exam_record
<span class="token keyword">WHERE</span>
  timestampdiff<span class="token punctuation">(</span><span class="token keyword">MINUTE</span><span class="token punctuation">,</span> start_time<span class="token punctuation">,</span> submit_time<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">5</span>
  <span class="token operator">OR</span> score <span class="token operator">IS</span> <span class="token boolean">NULL</span>
  <span class="token operator">OR</span> start_time <span class="token operator">IS</span> <span class="token boolean">NULL</span>
  <span class="token keyword">LIMIT</span> <span class="token number">3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8、sql117-删除记录-三" tabindex="-1"><a class="header-anchor" href="#_8、sql117-删除记录-三" aria-hidden="true">#</a> 8、<strong>SQL117 删除记录（三）</strong></h3><p>现有一张试卷作答记录表 exam_record，其中包含多年来的用户作答试卷记录，结构如下表：</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Extra</strong></th><th><strong>Default</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>auto_increment</td><td>(NULL)</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>用户 ID</td></tr><tr><td>exam_id</td><td>int(11)</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>试卷 ID</td></tr><tr><td>start_time</td><td>datetime</td><td>NO</td><td></td><td></td><td>(NULL)</td><td>开始时间</td></tr><tr><td>submit_time</td><td>datetime</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>提交时间</td></tr><tr><td>score</td><td>tinyint(4)</td><td>YES</td><td></td><td></td><td>(NULL)</td><td>得分</td></tr></tbody></table><p>请删除 exam_record 表中所有记录，并重置自增主键。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">TRUNCATE</span> <span class="token keyword">TABLE</span> exam_record
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_9、sql118-创建一张新表" tabindex="-1"><a class="header-anchor" href="#_9、sql118-创建一张新表" aria-hidden="true">#</a> 9、<strong>SQL118 创建一张新表</strong></h3><p>现有一张用户信息表，其中包含多年来在平台注册过的用户信息，随着牛客平台的不断壮大，用户量飞速增长，为了高效地为高活跃用户提供服务，现需要将部分用户拆分出一张新表。</p><p>原来的用户信息表：</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Default**</strong> **</th><th><strong>Extra</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td>(NULL)</td><td>auto_increment</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td>UNI</td><td>(NULL)</td><td></td><td>用户 ID</td></tr><tr><td>nick_name</td><td>varchar(64)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>昵称</td></tr><tr><td>achievement</td><td>int(11)</td><td>YES</td><td></td><td>0</td><td></td><td>成就值</td></tr><tr><td>level</td><td>int(11)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>用户等级</td></tr><tr><td>job</td><td>varchar(32)</td><td>YES</td><td></td><td>(NULL)</td><td></td><td>职业方向</td></tr><tr><td>register_time</td><td>datetime</td><td>YES</td><td></td><td>CURRENT_TIMESTAMP</td><td></td><td>注册时间</td></tr></tbody></table><p>作为数据分析师，请<strong>创建一张优质用户信息表 user_info_vip</strong>，表结构和用户信息表一致。</p><p>你应该返回的输出如下表格所示，请写出建表语句将表格中所有限制和说明记录到表里。</p><table><thead><tr><th><strong>Filed</strong></th><th><strong>Type</strong></th><th><strong>Null</strong></th><th><strong>Key</strong></th><th><strong>Default**</strong> **</th><th><strong>Extra</strong></th><th><strong>Comment</strong></th></tr></thead><tbody><tr><td>id</td><td>int(11)</td><td>NO</td><td>PRI</td><td></td><td>auto_increment</td><td>自增 ID</td></tr><tr><td>uid</td><td>int(11)</td><td>NO</td><td>UNI</td><td></td><td></td><td>用户 ID</td></tr><tr><td>nick_name</td><td>varchar(64)</td><td>YES</td><td></td><td></td><td></td><td>昵称</td></tr><tr><td>achievement</td><td>int(11)</td><td>YES</td><td></td><td>0</td><td></td><td>成就值</td></tr><tr><td>level</td><td>int(11)</td><td>YES</td><td></td><td></td><td></td><td>用户等级</td></tr><tr><td>job</td><td>varchar(32)</td><td>YES</td><td></td><td></td><td></td><td>职业方向</td></tr><tr><td>register_time</td><td>datetime</td><td>YES</td><td></td><td>CURRENT_TIMESTAMP</td><td></td><td>注册时间</td></tr></tbody></table><p>备注： 1.后台会通过 SHOW FULL FIELDS FROM user_info_vip 语句，来对比输出结果</p><p>2.如果该表已经被其他分析师创建过了，正常返回即可</p>`,71),r=[e];function o(i,l){return d(),n("div",null,r)}const u=t(a,[["render",o],["__file","Niuke-SQL-Advanced.html.vue"]]);export{u as default};
